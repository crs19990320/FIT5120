@{
    ViewBag.Title = "MoreInfo";
}

<!--
     * This is the Class for Ready to go page.
     * Version: 0.4
     * Author: Ruosong Chen, Qihang Wang
-->
<!DOCTYPE html>
<html lang="en">
<head>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            background-size: cover;
            background-position: center;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
        }


        table td {
            background-color: #a0a3cc;
        }

        th {
            background-color: #687896;
        }

        #clothingAdviceContainer .card {
            width: 300px;
            height: 125px;
            background-color: #734d04;
            color: #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform 0.5s ease, background-color 0.3s ease, margin 0.5s ease;
            position: relative;
            overflow: hidden;
            margin: 5px;
            cursor: pointer;
            border-radius: 40px;
        }

            #clothingAdviceContainer .card:hover {
                transform: scale(2);
                background-color: #cccccc;
                z-index: 2;
            }

                #clothingAdviceContainer .card:hover::after {
                    content: attr(data-detail1) "\A" attr(data-detail2) "\A" attr(data-detail3) "\A" attr(data-detail4) "\A" attr(data-detail5);
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    background-color: rgb(27, 24, 24, 0.8);
                    color: white;
                    font-size: 10px;
                    z-index: 1;
                    white-space: pre-wrap;
                }

        #activities.card {
            transition: transform 0.3s ease, opacity 0.3s ease;
            margin: 10px;
            background-color: rgba(255, 255, 255, 0.5);
        }

            #activities.card:hover {
                transform: scale(1.5);
                z-index: 1;
                background-color: rgba(189, 193, 210, 0.9);
                opacity: 1;
            }

                #activities.card:hover .hover-text {
                    display: block;
                    color: #000000;
                    font-size: 0.7vw;
                }

            #activities.card .hover-text {
                display: none;
            }

            #activities.card:hover .card-body p {
                display: none;
            }

        #total-row {
            margin-top: 30px;
        }
        #cityName {
            margin-top: 50px;
        }
    </style>

</head>
<body>
    <p id="cityName" style="font-size:40px; font-weight:bolder;">1</p>
    <div id="total-row" class="row">
        <div class="col-md-6">
            <div class="card" style="text-align: center; height: 150px; background-color: rgba(255, 255, 255, 0.5);">
                <div class="card-body">
                    <p>Highest UV index prediction for next 8 days</p>
                    <table>
                        <tr id="uvtableHeaderRow">
                        </tr>
                        <tr id="uvtableBodyRow">
                        </tr>
                    </table>
                </div>
            </div>
            <div class="card" style="text-align: center; height: 200px; background-color: rgba(255, 255, 255, 0.5);">
                <div class="card-body">
                    <p>Max-Min Temperature prediction for next 8 days</p>
                    <table>
                        <tr id="tetableHeaderRow">
                        </tr>
                        <tr id="maxtetableBodyRow">
                        </tr>
                        <tr id="mintetableBodyRow">
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4" >
                    <div class="card" style="text-align: center; height: 250px; background-color: rgba(255, 255, 255, 0.5); top:10px">
                        <div class="card-body">
                            <h5 class="card-title" style="font-size:30px;font-weight:bold; ">Want to keep track of your sunscreen usage?</h5>
                            <a href="~/imagine/daily_sunscreen_checklist.pdf" download="daily_sunscreen_checklist.pdf"> Download Me </a>
                        </div>

                    </div>
                </div>
                <div class="col-md-8">
                    <div id="activities" class="card" style="text-align: center; height: 250px;">
                        <div class="card-body">
                            <p style="font-size: 30px; font-weight:bold">Slide those curious little fingers over to this card and let's see where we're off to today!</p>

                            <div class="hover-text">
                                Today is a good day to do...<br>
                                @Html.Raw(ViewBag.actTips.Replace("\n", "<br>"))
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card" style="text-align: center; height: 600px; background-color: rgba(255, 255, 255, 0.5);">
                <div class="card-body">
                    <p style="font-weight: bold">Clothing Advice</p>
                    <div id="clothingAdviceContainer" class="row">
                        <div class="col-md-6">
                            <div id="day1" class="card" data-detail="Detail 1">Card 1</div>
                            <div id="day2" class="card" data-detail="Detail 2">Card 2</div>
                            <div id="day3" class="card" data-detail="Detail 3">Card 3</div>
                            <div id="day4" class="card" data-detail="Detail 4">Card 4</div>
                        </div>
                        <div class="col-md-6">
                            <div id="day5" class="card" data-detail="Detail 5">Card 5</div>
                            <div id="day6" class="card" data-detail="Detail 6">Card 6</div>
                            <div id="day7" class="card" data-detail="Detail 7">Card 7</div>
                            <div id="day8" class="card" data-detail="Detail 8">Card 8</div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script>
        // Function to fetch and display clothing advice data
        function getClothingData() {

            // Extract UV and temperature data from sessionStorage
            var uvData = extractDailyData("apidata_day_real_location", "apidata_uvi_real_location");
            var tempData = extractDailyData("apidata_day_real_location", "apidata_maxte_real_location", "apidata_minte_real_location");
            console.log(tempData)
            if (uvData.length === tempData.length) {
                var clothingAdvice = document.getElementById("clothingAdviceContainer");

                // Iterate through data and create clothing advice cards
                for (var i = 0; i < uvData.length; i++) {
                    var date = uvData[i].date;
                    var uvIndex = uvData[i].value;
                    var maxTemp = tempData[i].value;
                    var minTemp = tempData[i].min;
                    var idString = "day" + (i + 1).toString();
                    var title = document.getElementById(idString);
                    title.textContent = date;
                    var advice1 = "Date: " + date;
                    var advice2 = "UV Index: " + uvIndex;
                    var advice3 = "Max Temperature: " + (maxTemp - 273.15).toFixed(1) + "°C";
                    var advice4 = "Min Temperature: " + (minTemp - 273.15).toFixed(1) + "°C";
                    var advice5 = generateClothingAdvice(uvIndex, maxTemp, minTemp);
                    createAdviceCards(advice1, advice2, advice3, advice4, advice5, idString);

                }
            } else {
                console.log("Data mismatch between UV and temperature data.");
            }
        }

        // Function to create advice cards for clothing advice
        function createAdviceCards(advice1, advice2, advice3, advice4, advice5, idString) {
            const container = document.getElementById("clothingAdviceContainer");
            const card = document.getElementById(idString);
            card.setAttribute("data-detail1", `${advice1}`);
            card.setAttribute("data-detail2", `${advice2}`);
            card.setAttribute("data-detail3", `${advice3}`);
            card.setAttribute("data-detail4", `${advice4}`);
            card.setAttribute("data-detail5", `${advice5}`);
            container.appendChild(card);
        }

        // Function to extract daily data from sessionStorage
        function extractDailyData(dayKey, dataKey1, dataKey2 = null) {
            // Extract data from sessionStorage
            // Convert data to array format
            // Return array of daily data
            var dayData = sessionStorage.getItem(dayKey);
            var data1 = sessionStorage.getItem(dataKey1);
            var data2 = dataKey2 ? sessionStorage.getItem(dataKey2) : null;

            if (!dayData || !data1) {
                return [];
            }
            var dailyData = [];
            if (dayData && data1) {
                var days = dayData.split(",");
                var values1 = data1.split(",");
                var values2 = data2 ? data2.split(",") : null;

                for (var i = 0; i < days.length; i++) {
                    var date = new Date(days[i] * 1000).toDateString();
                    var value1 = parseFloat(values1[i]);
                    var value2 = data2 ? parseFloat(values2[i]) : null;

                    dailyData.push({ date: date, value: value1, max: value2, min: value2 });
                }
            }
            return dailyData;
        }

        // Function to generate clothing advice based on UV index and temperature
        function generateClothingAdvice(uvIndex, maxTemp, minTemp) {
            var advice = "";

            // advice
            if (uvIndex > 7) {
                advice += "UV index is high. Please use sunscreen and wear protective clothing. ";
            }
            if ((maxTemp-273.15) > 30) {
                advice += "It's hot outside. Wear light, breathable clothing. ";
            } else if ((maxTemp-273.15) < 16) {
                advice += "It's cold outside. Wear warm clothing. ";
            } else { advice += "The temperature is very good. Dress nicely and go out." }

            return advice;
        }

        function useSessionStorageValue() {
            var time = sessionStorage.getItem("apidata_day_real_location");
            var uvi = sessionStorage.getItem("apidata_uvi_real_location");
            var maxTe = sessionStorage.getItem("apidata_maxte_real_location");
            var minTe = sessionStorage.getItem("apidata_minte_real_location");
            if (time && uvi) {
                var timestamps = time.split(",");
                var uvsplit = uvi.split(",");
                var headerRow = document.getElementById("uvtableHeaderRow");
                var bodyRow = document.getElementById("uvtableBodyRow");
                timestamps.forEach(function (item) {
                    var date = new Date(item * 1000);
                    var dateString = date.toUTCString();
                    var parts = dateString.split(" ");
                    var monthDayString = parts[2] + " " + parts[1];
                    var th = document.createElement("th");
                    th.style.border = "1px solid #ddd";
                    th.style.padding = "8px";
                    th.style.textAlign = "center";
                    th.textContent = monthDayString;
                    headerRow.appendChild(th);
                });
                uvsplit.forEach(function (item) {
                    var td = document.createElement("td");
                    td.style.border = "1px solid #ddd";
                    td.style.padding = "8px";
                    td.style.textAlign = "center";
                    td.textContent = item;
                    bodyRow.appendChild(td);
                });
            } else {
                console.log("No data found in sessionStorage.");
            }
            if (time && maxTe && minTe) {
                var maxTeS = maxTe.split(",");
                var minTeS = minTe.split(",");
                var timestamps = time.split(",");
                var headerRow = document.getElementById("tetableHeaderRow");
                var maxbodyRow = document.getElementById("maxtetableBodyRow");
                var minbodyRow = document.getElementById("mintetableBodyRow");
                timestamps.forEach(function (item) {
                    var date = new Date(item * 1000);
                    var dateString = date.toUTCString();
                    var parts = dateString.split(" ");
                    var monthDayString = parts[2] + " " + parts[1];
                    var th = document.createElement("th");
                    th.style.border = "1px solid #ddd";
                    th.style.padding = "8px";
                    th.style.textAlign = "center";
                    th.textContent = monthDayString;
                    headerRow.appendChild(th);
                });
                maxTeS.forEach(function (item) {
                    var td = document.createElement("td");
                    td.style.border = "1px solid #ddd";
                    td.style.padding = "8px";
                    td.style.textAlign = "center";
                    td.textContent = (item - 273.15).toFixed(1);
                    maxbodyRow.appendChild(td);
                });
                minTeS.forEach(function (item) {
                    var td = document.createElement("td");
                    td.style.border = "1px solid #ddd";
                    td.style.padding = "8px";
                    td.style.textAlign = "center";
                    td.textContent = (item - 273.15).toFixed(1);
                    minbodyRow.appendChild(td);
                });
            } else {
                console.log("No data found in sessionStorage.");
            }
        }

        function getCityName() {
            var cname = sessionStorage.getItem('current_location_re');
            var cityNameElement = document.getElementById("cityName");
            cityNameElement.textContent = "You are in " + cname + "! Good place!";
        }


        window.onload = function () {
            useSessionStorageValue();
            getClothingData();
            getCityName();
        };
    </script>
</body>
</html>
