<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Quest Home</title>
    <style>
        html, body {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #leftbar {
            position: relative;
            width: 200px;
            height: 640px;
            top: 0px;
            left: 0px;
            background-color: rgba(255, 255, 255, 0.7);
            border-radius: 30px;
            text-align: center;
        }

        #topbar {
            position: relative;
            width: 1200px;
            height: 60px;
            top: 0px;
            left: 0px;
            background-color: black;
            border-radius: 30px;
            text-align: center;
        }

        #test {
            position: absolute;
            top: 32px;
            left: 33px;
            width: 83.5%;
            height: 59.7%;
        }

        #svg_puzzle {
            position: absolute;
            top: -80px;
            left: 20px;
            width: 100%;
            height: 100%;
        }

        #test {
            z-index: 1;
        }

        #svg_puzzle {
            z-index: 2;
        }

        #content {
            position: absolute;
            left: 230px;
            top: 70px;
            width: 782px;
        }

        .underline {
            position: relative;
        }

            .underline:after {
                content: '';
                position: absolute;
                left: 30px;
                right: 0;
                bottom: 0;
                height: 2px;
                background-color: black;
                width: 140px; /* change size */
            }

        .quest {
            cursor: pointer;
        }

        #image-container {
            position: absolute;
            display: flex;
            justify-content: center;
            left: -10px;
            top: 105px;
            align-items: center;
            gap: 20px; /* gap between pics */
            background-color: transparent;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            padding: 20px;
        }

        img {
            width: 450px;
            max-width: 1920px;
            max-height: 1080px;
            object-fit: contain;
            border: none;
            border-radius: 8px;
            box-shadow: none;
        }

        #counterDisplay {
            display: inline-block;
            padding: 20px 10px;
            background-color: #FFC880;
            color: black;
            font-size: 16px;
            text-align: center;
            border-radius: 35px; /* 圆角边框 */
            border: none; /* 不显示边框 */
            transition: background-color 0.3s; /* 背景颜色变化的过渡效果 */
            position: absolute;
            top: 2px;
            font-weight:700;
            width: 180px;
        }

    </style>

</head>

<body style="background-image: url('../../media/main_quest_bg.png'); background-size: cover; ">
    <div style="display: flex; align-items: center; width: 1200px; ">

        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light" style="left:950px">
            <img src="~/Media/new_logo.png" style=" width: 100px; position: absolute; top: 1px; right:1100px">
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-end">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link text-brown" href="@Url.Action("Dashboard", "Home")" style="font-size:25px;font-weight: bolder;color:black">
                            <img src="~/Media/Dashboard_Kids.png" alt="Family Icon" style="width: 120px; height: 70px; margin-right: -23px;">
                            DashBoard
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>

    <div class="card" style=" width: 1200px; height: 700px; margin-top: 20px; background-color: rgba(255, 204, 212, 0.63); border-radius: 30px;">
        <div id="topbar">
            <h1 style="color:white;">CLIMATE QUESTS</h1>
        </div>

        <div id="content">
            <img id="content-image" src="~/Media/puzzle_background.png" style="display: flex; width: 582px; height: 350px; opacity: 0.9; position: absolute; z-index: -1;" />
            <div id="specialDiv" style="display: none;">
                <div style="margin-bottom:20px;">
                    <card style="background-color: lightcoral; border-radius: 10px; padding: 10px; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); display: inline-block; margin: 1px; font-family: Arial, sans-serif; font-weight:bolder; font-size:x-large;">
                        <img src="~/Media/telescope.png" style="width:30px;" /> Climate Spotter
                    </card>
                </div>
                <span style="font-family: Arial, sans-serif; font-weight: bold; font-size:larger;"><img src="~/Media/note.png" style="width:30px;" />  Spot the changes! Click on the right picture when you find something different!</span>
                <div id="counterDisplay">Your Track:0/9</div>
                <div id="image-container">
                    <img id="image1" src="~/Media/quest2_1_vertical.png" alt="First Image">
                    <img id="image2" src="~/Media/quest2_2_vertical.png" alt="Second Image">
                    <svg width="1000" height="500" style="position: absolute; left: 450px; bottom:20px;">
                        <circle id="c1" cx="73" cy="220" r="20" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c2" cx="125" cy="240" r="30" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c3" cx="195" cy="100" r="30" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c4" cx="120" cy="330" r="20" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c5" cx="165" cy="455" r="20" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c6" cx="265" cy="470" r="20" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c7" cx="405" cy="410" r="20" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c8" cx="273" cy="280" r="50" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                        <circle id="c9" cx="460" cy="180" r="15" fill="transparent" stroke="transparent" stroke-width="2px" onmouseover="enlargeAndMoveToFront(this)" onmouseout="resetRadius(this)" onclick="handleCircleClick(this)" />
                    </svg>
                </div>
            </div>

        </div>

        <div id="leftbar">
            <h3 style="margin-top:20px;" id="quest1" class="quest">Quest 1</h3>
            <h3 style="margin-top:20px;" id="quest2" class="quest">Quest 2</h3>
            <h3 style="margin-top:20px;" id="quest3" class="quest">Quest 3</h3>
        </div>
    </div>
</body>
</html>

<script>
    // click event to all quests
    document.querySelectorAll('.quest').forEach(item => {
        item.addEventListener('click', function () {

            var contentImage = document.getElementById('content-image');
            var contentText = document.getElementById('content-text');
            // remove all underlines
            document.querySelectorAll('.quest').forEach(quest => {
                quest.classList.remove('underline');
            });

            // add underline for the current quest
            this.classList.add('underline');

            // update texts for the content
            switch (this.id) {
                case 'quest1':
                    document.getElementById('specialDiv').style.display = 'none';
                    contentImage.src = '../Media/cat1.png';
                    break;
                case 'quest2':
                    contentImage.src = '../Media/frog1.png';
                    // 获取 div 并更改其显示属性
                    var specialDiv = document.getElementById('specialDiv');
                    specialDiv.style.display = 'block';
                    break;
                case 'quest3':
                    document.getElementById('specialDiv').style.display = 'none';
                    contentImage.src = '../Media/fox1.png';
                    break;
                //default:
                //    contentImage.src = '~/Media/puzzle_background.png';
                //    contentText.innerHTML = 'Click on a quest to start!';
                //    break;
            }
        });
    });
</script>

<script>
    // by default show quest1
    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('quest1').click();
    });
</script>

<script>
    let clickedCircles = new Set();
    let counter = 0;
    let chooseCircle = null;

    function enlargeAndMoveToFront(circle) {
        if (chooseCircle !== circle) {
            circle.setAttribute('r', parseInt(circle.getAttribute('r')) + 10);
            circle.parentNode.appendChild(circle);
            if (chooseCircle) {
                circle.parentNode.appendChild(chooseCircle);
            }
        }
    }

    function resetRadius(circle) {
        if (chooseCircle !== circle) {
            circle.setAttribute('r', parseInt(circle.getAttribute('r')) - 10);
        }
    }

    function handleCircleClick(circle) {
        if (!clickedCircles.has(circle.id)) { // 检查集合中是否已有该圆圈
            clickedCircles.add(circle.id); // 添加圆圈ID到集合
            counter++; // 计数器增加
            document.getElementById('counterDisplay').textContent = `Your Track:${counter}/9`;
        }

        if (chooseCircle !== circle) {
            if (chooseCircle) {
                chooseCircle.setAttribute('r', parseInt(chooseCircle.getAttribute('r')) - 25);
            }
            circle.setAttribute('stroke', '#E74C3C');
            circle.setAttribute('r', parseInt(circle.getAttribute('r')) + 15);
            circle.parentNode.appendChild(circle);
            chooseCircle = circle;
            console.log(`Circle ${circle.id} is now active and enlarged.`);
            
        }
    }

</script>