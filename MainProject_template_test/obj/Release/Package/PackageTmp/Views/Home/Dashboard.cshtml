@{
    ViewBag.Title = "Dashboard";
}
@*@model IEnumerable<MainProject.Models.QuestionTable>*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Card Layout</title>

    <!-- Favicon -->
    <link href="~/img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Inter:wght@600&family=Lobster+Two:wght@700&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="~/lib/animate/animate.min.css" rel="stylesheet">
    <link href="~/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="~/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <!--<link href="~/css/style.css" rel="stylesheet">-->

    <style>
        .card-row {
            display: flex;
            justify-content: flex-start;
            margin-bottom: -11px;
        }

        .card-row .card {
            width: 41%;
            margin-right: 1%;
            float: none; 
        }

        .card {
            background-color: lightskyblue;
            width: 50%;
            height: auto;
            display: flex;
            flex-direction: row;
            border: 1px solid #ccc;
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .card-title {
            font-size: 40px;
            margin-top: 10px;
            margin-left: 5px;
            margin-bottom: 5px;
            color: white;
        }

        .card-content {
            flex: 1;
            margin-left: 30px;
            margin-bottom: 10px;
        }

        .button-container {
            margin-top:20px;
            padding-left: 40px;
            padding-bottom: 20px;
            text-align: center;
        }

        .btn {
            display: inline-block;
            padding: 10px 30px;
            margin-right: 30px;
            margin-bottom: 5px;
            font-size: 16px;
            text-align: center;
            text-decoration: none;
            color: deepskyblue;
            background-color: white;
            border: none;
            border-radius: 20px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }

        .btn:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .card-image {
            width: 40%;
            overflow: hidden;
        }

        .card-image-small-card {
            position: absolute; /* Positioning the image absolutely */
            bottom: 20px; /* Align to the bottom */
            right: 0; /* Align to the right */
            width: 50%; /* Adjust the width as per your design */
            overflow: visible;
            height: 100px; /* Optional: Adjust the height as needed */
        }

        img {
            width: 100%;
            height: auto;
        }

        .transparent-cards {
            display: flex;
            flex-direction: column;
            margin-top: 20px; /* Adjust as needed */
        }

        .transparent-card {
        }

        .checklist-item {
            width: 400px; /* Adjust card width as needed */
            height: 100px; /* Adjust card height as needed */
            background-color: rgba(255, 255, 255, 0.5); /* Adjust transparency as needed */
            border: none; /* Add border as needed */
            border-radius: 8px; /* Adjust border radius as needed */
            margin-right: 20px; /* Adjust spacing between cards as needed */
            margin-bottom: 10px; /* Adjust spacing between cards as needed */
            display: flex;
            align-items: center;
            font-weight: bold;
        }

        .checklist-item input[type="checkbox"] {
            display: none;
        }

        .checklist-item label {
            position: absolute;
            display: inline-block;
            width: 20px;
            height: 20px;
            background-color: #fff;
            border: 1px solid #ccc;
            /* border-radius: 50%; */
            cursor: pointer;
        }
        .checklist-item span {
            width: 300px;
            position: absolute;
            left: 120px;
        }
        .checklist-item img {
            position: absolute;
            width: 30px;
            left: 400px;
            margin-top: 60px;
        }
        .checklist-item p {
            margin-top: 80px;
            position: absolute;
            left: 430px;
        }


        .checklist-item input[type="checkbox"]:checked + label:after {
            content: '';
            position: absolute;
            top: 4px;
            left: 7px;
            width: 6px;
            height: 12px;
            border: solid #007bff;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
        }

        .mybutton1{
            text-align:left;
            position:absolute;
            margin-left:-40px;
        }

        .text-brown {
            color: white;
        }

        .boxed-link {
            border: 2px solid #A52A2A;
            border-radius: 5px;
        }

        .navbar-nav .nav-link {
            position: relative;
            transition: color 0.5s, border-bottom 0.5s;
            margin-right: 5px;
        }

        .navbar-nav .nav-link:hover {
            color: orangered;
        }

        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            left: 20px;
            bottom: 2px;
            width: 80%;
            height: 2px;
            background-color: orangered;
            transition: width 0.5s;
            transform: scaleX(0);
            transform-origin: left;
        }

        .navbar-nav .nav-link:hover::after {
            transform: scaleX(1);
        }
        label{
            margin-left:20px;
            margin-right:10px;

        }
    </style>


</head>
<body style="background-image:url('../Media/page_background4.png'); background-repeat:no-repeat;background-size:cover">
    <div style="display: flex; align-items: center;">
        <div id="usernameshow" style="width: 700px;">
            <svg width="100" height="100" style=" position: relative; left: -18px; top: 0px;">
                <circle id="dashboardusercolor" cx="50" cy="50" r="40" fill="white" stroke="black" stroke-width="1" />
            </svg>
            <img id="dashboarduseranimal" src="~/Media/unregistered_user.png" style="width: 75px; height: 75px; position: relative; top: 0px; left: -109px;">
        </div>
        <h4 id="Himessage" style="text-align: left; position: absolute; font-family: 'Lobster Two', cursive; padding-left: 90px; font-size: 30px;">
            Hi, Guest!
        </h4>

        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light" style=" font-size: 20px; width: 550px;left: -10px;">
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-end">
                <ul class="navbar-nav">
                    <li id="hidesign" class="nav-item" style="width:186px;">
                        <a class="nav-link text-brown" href="@Url.Action("LoginChoicePage", "Home")" style="font-weight: bolder; width: 250px;">
                            <img src="~/Media/login_icon.png" alt="Family Icon" style="width: 60px; height: 60px; margin-right: 0px;">
                            Sign up/ Login
                        </a>
                    </li>
                    <li class="nav-item" style="width:171px;">
                        <a class="nav-link text-brown" href="@Url.Action("HomePage", "Home")" style="font-weight: bolder; width:250px">
                            <img src="~/Media/Home.png" alt="Family Icon" style="width: 100px; height: 60px; margin-right: -20px;">
                            HomePage
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-brown" href="@Url.Action("Parents", "Home")" style="font-weight: bolder; width:280px">
                            <img src="~/Media/Dashboard_for_MomDad.png" alt="Family Icon" style="width: 100px; height: 60px; margin-right: -20px;">
                            For Mom & Dad
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
    </div>

    <div style="margin-top:70px; margin-bottom:10px; display: flex; align-items: center;">
        <h4 style="font-size:30px">Your Weekly Activities</h4>
        <h4 style="margin-left: 450px; font-size: 30px">Checklist</h4>
    </div>

    <div class="card" style="width: 40%; background-color: limegreen; float: right; height: 854px;">
        <div class="card-content">
            <div class="card-title" style="font-family: 'Lobster Two', cursive; font-size:60px">Commit</div>
            <div style="color: white; margin-left: 30px;">
                <h5 style="font-family: 'Lobster Two', cursive; color:white;">Visit learn section, click on tasks to earn rewards, and see your impact in the Journey section!</h5>
                <div class="transparent-cards">
                    <div id="checklistdiv" class="checklist-item">
                        <input type="checkbox" id="CTASK1" name="task1">
                        <label for="CTASK1"></label>
                        <span>Turned off the tap while brushing my teeth</span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x1</p>
                    </div>
                    <div class="checklist-item">
                        <input type="checkbox" id="CTASK2" name="task2">
                        <label for="CTASK2"></label>
                        <span>Shortened my shower</span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x1</p>
                    </div>
                    <div class="checklist-item">
                        <input type="checkbox" id="CTASK3" name="task3">
                        <label for="CTASK3"></label>
                        <span> Turn off the tap while soaping during handwash</span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x1</p>
                    </div>
                    <div class="checklist-item">
                        <input type="checkbox" id="CTASK4" name="task4">
                        <label for="CTASK4"></label>
                        <span> Took a walk around my house to find any water leaks </span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x1</p>
                    </div>
                    <div class="checklist-item">
                        <input type="checkbox" id="CTASK5" name="task5">
                        <label for="CTASK5"></label>
                        <span> Used a bucket to collect rainwater</span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x1</p>
                    </div>
                    <div class="checklist-item">
                        <input type="checkbox" id="CTASK6" name="task6">
                        <label for="CTASK6"></label>
                        <span> Shared water-saving tips with my friends</span>
                        <img src="~/Media/puzzlePiece.png" />
                        <p>x2</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card-row">
        <div class="card" style="background-color:lightskyblue; height: 248px;">
            <div class="card-content">
                <div class="card-title" style="font-size: 50px; font-family: 'Lobster Two', cursive;">Learn</div>
                <div style="color: white; padding-right: 90px;">
                    Explore engaging tutorials and expand your knowledge!
                </div>
                <div class="button-container">
                    <div class="mybutton1">
                        <a href="LearnPage" class="btn">Start</a>
                    </div>
                </div>
            </div>
            <div class="card-image" style="position: absolute; left: 190px; top: 133px;">
                <img src="~/Media/Learn.png" alt="Placeholder Image">
            </div>
        </div>
        <div class="card" style="background-color: #FF9900; height:248px;">
            <div class="card-content">
                <div class="card-title" style="font-size: 50px; font-family: 'Lobster Two', cursive;">Engage</div>
                <div style="color: white; padding-right: 90px;">
                    Discover interactive quests to learn and test your knowledge!
                </div>
                <div class="button-container">
                    <div class="mybutton1">
                        <a href="Quest" class="btn">Start</a>
                    </div>
                </div>
            </div>
            <div class="card-image" style="position: absolute; left: 190px; top: 133px;">
                <img src="~/Media/handy-line-joyful-monitor.png" style="padding-top: 17px; transform: scale(1.7);" alt="Placeholder Image">
            </div>
        </div>
    </div>

        <div class="card-row">
            <!-- CardGame Card-->
            <div class="card" style="background-color: mediumpurple; height:248px;">
                <div class="card-content" style="margin-left:10px;">
                    <div class="card-title" style="font-size: 50px; font-family: 'Lobster Two', cursive;">Play</div>
                    <div style="color:white;">
                        Explore scenarios,
                        choose sustainable <br />actions,
                        and impact <br /> climate health
                    </div>
                    <div class="button-container">
                        <div class="mybutton1">
                            <div id="game" class="btn" style="color:mediumpurple">Start</div>
                        </div>
                    </div>
                </div>
                <div class="card-image-small-card">
                    <img src="~/Media/Play.png" alt="Placeholder Image">
                </div>
            </div>

          

            <!-- Map page -->
            <div class="card" style="background-color: hotpink; height:248px;">
                <div class="card-content" style="margin-left:10px;">
                    <div class="card-title" style="font-size: 50px; font-family: 'Lobster Two', cursive;">Explore</div>
                    <div style="color:white;">
                        Discover the impact <br />
                        of different climate<br />
                        factors on Australia
                    </div>
                    <div class="button-container">
                        <div class="mybutton1">
                            <!--<a class="btn" style="color:hotpink" href="~/d3_project/map.html">Start</a>-->
                            <a href="Map" class="btn" style="color:hotpink">Start</a>
                        </div>
                    </div>
                </div>
                <div class="card-image-small-card">
                    <img src="~/Media/Explore.png" alt="Placeholder Image">
                </div>
            </div>

        </div>
        <div style="position: absolute; top: 0px;">
            <div style="position: absolute; top: 759px; left: 10px; width: 200px; ">
                <h2 style="font-size:25px">Your Impact</h2>
            </div>
            <!-- Journey Page-->
            <div class="card" style=" background-color: #E5696D; width: 630px; height: 140px; position: absolute; top: 791px;">
                <div class="card-content" style="margin-left:10px;">
                    <div class="card-title" style="font-family: 'Lobster Two', cursive;">Journey</div>
                    <div style="color: white; width: 270px; font-size: 13px;">
                        After watching lessons and completing tasks,<br />
                        visit here to see your impact and earn rewards!
                    </div>
                    <div class="button-container" style="position: absolute; left: 318px; top: 53px;">
                        <div class="mybutton1">
                            <a href="Puzzle" class="btn" style="color: #E5696D">Start</a>
                        </div>
                    </div>
                </div>
                <div class="card-image" style="width: 200px;">
                    <img src="~/Media/puzzle.png" alt="Placeholder Image">
                </div>
            </div>

            <div class="card" style=" background-color: #CF8767; width: 630px; height: 140px; position: absolute; top: 944px;">
                <div class="card-content" style="margin-left:10px;">
                    <div class="card-title" style=" left: 363px; font-family: 'Lobster Two', cursive; position: absolute;">Leaderboard</div>
                    <div style="position: absolute; color: white; width: 270px; font-size: 13px; left: 372px; top: 82px;">
                        Check your progress to see your rank and compare scores with friends!
                    </div>
                    <div class="button-container" style="position: absolute; left: 213px; top: 53px;">
                        <div class="mybutton1">
                            <a href="Leaderboard" class="btn" style="color: #E5696D">Start</a>
                        </div>
                    </div>
                </div>
                <div class="card-image" style="width: 200px; position: absolute;">
                    <img src="~/Media/techny-medal-and-trophy-awarded-for-success.png" alt="Placeholder Image">
                </div>
            </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var currentWeek = sessionStorage.getItem('currentWeek');
                var storedUsername = sessionStorage.getItem('username');
                if (!storedUsername || storedUsername === "PlaceHolder-Panda#0000") {
                    var taskStatus = JSON.parse(sessionStorage.getItem('checkListData')) || {};

                    document.querySelectorAll('.checklist-item input[type="checkbox"]').forEach(function (checkbox) {
                        if (taskStatus[checkbox.id]) {
                            var textSpan = checkbox.parentNode.querySelector('span').textContent;
                            if (taskStatus[checkbox.id] === textSpan) {
                                checkbox.checked = true;
                            }
                        }
                        checkbox.addEventListener('click', function () {
                            var textSpan = checkbox.parentNode.querySelector('span').textContent;
                            if (checkbox.checked) {
                                taskStatus[checkbox.id] = textSpan;
                            } else {
                                delete taskStatus[checkbox.id];
                            }
                            sessionStorage.setItem('checkListData', JSON.stringify(taskStatus));
                        });
                    });
                }
                else {
                    var taskStatuses = {
                        CTASK1: JSON.parse(sessionStorage.getItem('CTASK1') || '{}'),
                        CTASK2: JSON.parse(sessionStorage.getItem('CTASK2') || '{}'),
                        CTASK3: JSON.parse(sessionStorage.getItem('CTASK3') || '{}'),
                        CTASK4: JSON.parse(sessionStorage.getItem('CTASK4') || '{}'),
                        CTASK5: JSON.parse(sessionStorage.getItem('CTASK5') || '{}'),
                        CTASK6: JSON.parse(sessionStorage.getItem('CTASK6') || '{}')
                    };

                    function updateTaskStatus(taskName, checkbox, statusObj) {
                        var originalValue = "";
                        var originalObject;
                        if (statusObj == null) {
                            statusObj = {};
                            checkbox.checked = false;
                        } else if (statusObj != null) {
                            if (currentWeek in statusObj) {
                                checkbox.checked = true;
                            } else {
                                originalValue = sessionStorage.getItem(taskName);
                                originalObject = JSON.parse(originalValue);
                            }
                        }

                        checkbox.addEventListener('click', function () {
                            if (checkbox.checked) {
                                statusObj[currentWeek] = true;
                            } else {
                                checkbox.checked = false;
                                statusObj[currentWeek] = false;
                            }
                            console.log(originalObject);
                            //statusObj[currentWeek] = true;
                            if (statusObj[currentWeek]) {
                                var saveObject = { [currentWeek]: statusObj[currentWeek] };
                                var mergedObject = Object.assign({}, originalObject, saveObject);
                                sessionStorage.setItem(taskName, JSON.stringify(mergedObject));
                            }
                            else {
                                ForDeleteValue = sessionStorage.getItem(taskName);
                                ForDeleteObject = JSON.parse(ForDeleteValue);
                                delete ForDeleteObject[currentWeek];
                                sessionStorage.setItem(taskName, JSON.stringify(ForDeleteObject));
                                console.log(sessionStorage.getItem(taskName));

                            }
                            $.ajax({
                                url: '/Home/updateTaskStatus',
                                type: 'POST',
                                contentType: 'application/json',
                                data: JSON.stringify({
                                    USERNAME: storedUsername,
                                    VIDEOTASK: sessionStorage.getItem('VIDEOTASK') || "",
                                    CTASK1: sessionStorage.getItem('CTASK1') || "",
                                    CTASK2: sessionStorage.getItem('CTASK2') || "",
                                    CTASK3: sessionStorage.getItem('CTASK3') || "",
                                    CTASK4: sessionStorage.getItem('CTASK4') || "",
                                    CTASK5: sessionStorage.getItem('CTASK5') || "",
                                    CTASK6: sessionStorage.getItem('CTASK6') || "",
                                }),
                                success: function (response) {
                                    console.log(response.message);
                                },
                                error: function () {

                                    console.log("error");

                                }
                            });
                        });
                    }

                    document.querySelectorAll('.checklist-item input[type="checkbox"]').forEach(function (checkbox) {
                        var taskName = checkbox.id;
                        updateTaskStatus(taskName, checkbox, taskStatuses[taskName]);
                    });

                }
            });

        </script>
        <script>
    document.getElementById('game').addEventListener('click', function () {
        var jsonData = @Html.Raw(Json.Encode(Model));

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }
        shuffle(jsonData);
        var selectedQuestions = jsonData.slice(0, 10);
        var encapsulatedData = {
            questions: selectedQuestions
        };
        sessionStorage.setItem('QuestionJson', JSON.stringify(encapsulatedData));
        console.log("Randomly selected 10 questions:", encapsulatedData);
        window.location.href = '/Home/CardGame';
    });
        </script>

            <script>
                var username = sessionStorage.getItem('username');
                if (!username || username === "PlaceHolder-Panda#0000") {
                } else {
                    
                    document.getElementById('hidesign').style.opacity = 0;
                    document.getElementById('hidesign').disabled = true;
                    var color = username.split('-')[0];
                    var fillstring = "";
                    var animal = username.split('-')[1].split("#")[0];
                    var animalsrc = "../Media/" + animal + ".png";
                    switch (color) {
                        case 'Red': fillstring = '#E74C3C'; break;
                        case 'Purple': fillstring = '#9B59B6'; break;
                        case 'Green': fillstring = '#82E0AA'; break;
                        case 'Orange': fillstring = '#EB984E'; break;
                        case 'Pink': fillstring = '#F89DF0'; break;
                        case 'Blue': fillstring = '#5DADE2'; break;
                        case 'Navy': fillstring = '#1C298A'; break;
                        case 'Grey': fillstring = '#D1D3DB'; break;
                        case 'Yellow': fillstring = '#F4D03F'; break;
                    }
                    document.getElementById('Himessage').textContent = "Hi, " + color + " " + animal + "!";
                    document.getElementById('dashboardusercolor').setAttribute('fill', fillstring);
                    document.getElementById('dashboarduseranimal').src = animalsrc;
                }
            </script>
</body>
</html>

@*<script>
        // Function to show temporary window with different content based on checkbox id
        function showTempWindow(id) {
            var content = "";

            // Determine content based on checkbox id
            switch (id) {
                case "task1":
                    content = "Hurray,In 5 years, you would have preserved 25 wetlands for alligators.";
                    break;
                case "task2":
                    content = "Content for Task 2.";
                    break;
                case "task3":
                    content = "Content for Task 3.";
                    break;
                default:
                    content = "Default content.";
            }

            // Set content and display temporary window
            document.getElementById("tempContent").innerText = content;
            document.getElementById("tempWindow").style.display = "block";
        }

        // Function to close temporary window
        function closeTempWindow() {
            document.getElementById("tempWindow").style.display = "none";
        }

        // Add event listener to each checkbox
        document.querySelectorAll('input[type="checkbox"]').forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    showTempWindow(this.id);
                }
            });
        });
    </script>*@





