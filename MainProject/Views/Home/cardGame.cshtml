@{
    ViewBag.Title = "CardGame";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <style>
        body {
            position: relative;
            font-family: Arial, sans-serif;
        }

        #gifBackground {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        .tabbed-container {
            width: 1000px;
            margin: 20px auto;
            box-shadow: 0 0 15px rgba(0,0,0,0.2);
        }

        .tabs {
            list-style: none;
            padding: 0;
            margin: 0;
            background-color: #333;
            overflow: hidden;
            text-align: center;
        }

        .tabs .tab-link {
            display: inline-block;
            padding: 10px 15px;
            cursor: pointer;
            background-color: #333;
            color: white;
            border-bottom: 3px solid transparent;
        }

        .tabs .tab-link.current {
            background-color: #f9f9f9;
            color: #333;
            border-bottom: 3px solid #f9f9f9;
        }

        .tab-content {
            display: none;
            padding: 20px;
            background-color: #f9f9f9;
            color: #333;
            text-align:center;
        }

        .tab-content.current {
            display: block;
            text-align: center;
        }
    </style>
</head>
<body>
    <img id="gifBackground" src="~/Media/giphy2.gif" alt="GIF Background">

    <div style="text-align:center">
        <button id="reset" style="width:50px;right:470px;top:100px;position:absolute;background-color:transparent;">
            <img style="width:100%;" src="~/Media/reset.png" />
        </button>
        <iframe id="unityFrame" src="~/Games/card.html" style="width:1000px; height:800px"></iframe>
    </div>

    <div class="tabbed-container">
        <ul class="tabs">
            <li class="tab-link current" data-tab="tab-1">Start Game</li>
            <li class="tab-link" data-tab="tab-2">Statuses</li>
            <li class="tab-link" data-tab="tab-3">How to make a choice</li>
            <li class="tab-link" data-tab="tab-4">Result</li>
        </ul>

        <div id="tab-1" class="tab-content current">
            <img style="width:80%; top:10px" src="~/Media/StartGame .png" />
            <h4>Click on the <b>Action Start</b> to start a Game</h4>
        </div>
        <div id="tab-2" class="tab-content">
            <img style="width:80%; top:10px" src="~/Media/Statuses.png">
            <h4>The different attribute values from left to right are: <b>Carbon</b>, <b>Water</b>, <b>EcoLife</b>. The values will <b>increase</b> and <b>decrease</b> depending on the different outcomes you select.</h4>
        </div>
        <div id="tab-3" class="tab-content">
            <img style="width:80%; top:10px" src="~/Media/Drag1.png">
            <h4>Drag the <b>Question Card</b> to left to see a choice.</h4>
            <img style="width:80%; top:10px" src="~/Media/Drag2.png">
            <h4>Drag the <b>Question Card</b> to right to see another choice choice.</h4>
            <h4>End Drag to make a choice.</h4>
        </div>
        <div id="tab-4" class="tab-content">
            <img style="width:80%; top:10px" src="~/Media/EndGame.png">
            <h4>you will have <b>medal</b> based on your statuses</h4>
            <h4>you will see <b>score</b> based on your choice</h4>
        </div>
        <h4 style="text-align:center; color:aliceblue"> <b>Have Fun!</b> There is no right or wrong for every choice!</h4>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tabs = document.querySelectorAll('.tab-link');
            const tabContents = document.querySelectorAll('.tab-content');

            tabs.forEach(tab => {
                tab.addEventListener('click', function () {
                    const target = document.querySelector('#' + this.dataset.tab);

                    tabs.forEach(t => {
                        t.classList.remove('current');
                    });
                    tabContents.forEach(tc => {
                        tc.classList.remove('current');
                    });

                    tab.classList.add('current');
                    target.classList.add('current');
                });
            });
        });
    </script>
    <script>
    document.getElementById('reset').addEventListener('click', function () {
        var jsonData = @Html.Raw(Json.Encode(Model));

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }
        shuffle(jsonData);
        var selectedQuestions = jsonData.slice(0, 10);
        var encapsulatedData = {
            questions: selectedQuestions
        };
        sessionStorage.setItem('QuestionJson', JSON.stringify(encapsulatedData));
        console.log("Randomly selected 10 questions:", encapsulatedData);
        window.location.reload();
    });
    </script>
</body>
</html>
